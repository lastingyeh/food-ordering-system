@startuml
package "order-service" {
    package "order-domain" {
        package "event" {
            class OrderEvent {
                - Order order
                - ZonedDateTime createdAt
                + OrderEvent(Order, ZonedDateTime)
                + getOrder() : Order
                + getCreatedAt() : ZonedDateTime
            }

            class OrderCreatedEvent extends OrderEvent {
                + OrderCreatedEvent(Order, ZonedDateTime)
            }

            class OrderPaidEvent extends OrderEvent {
                + OrderPaidEvent(Order, ZonedDateTime)
            }

            class OrderCancelledEvent extends OrderEvent {
                + OrderCancelledEvent(Order, ZonedDateTime)
            }
        }

        package "ports.output.publisher.payment" {
            interface OrderCreatedPaymentRequestMessagePublisher {
                + publish(OrderCreatedEvent)
            }

            interface OrderCancelledPaymentRequestMessagePublisher {
                + publish(OrderCancelledEvent)
            }
        }

        package "ports.output.publisher.restaurantapproval" {
            interface OrderPaidRestaurantRequestMessagePublisher {
                + publish(OrderPaidEvent)
            }
        }
    }

    package "order-messaging" {
        class OrderMessagingConfig {
            + configure()
        }
    }
}
@enduml